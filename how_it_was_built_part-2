- Authentication is based on Hristo Georgiev apporach with certain notable alterations
    - https://www.pluralsight.com/guides/token-based-authentication-with-ruby-on-rails-5-api

Generate the User model
    rails g model User name:string email:string password_digest:string
    https://github.com/alex-magana/eat-in/commit/0c42fed8383ecbc0c29be65f6f7d653cf47e13f1
    https://github.com/alex-magana/eat-in/pull/7/files

Run migrations
    rails db:migrate
    https://github.com/alex-magana/eat-in/pull/7/files

Prepare the db test environment
    rails db:test:prepare

Add specs for User model
    https://github.com/alex-magana/eat-in/commit/12563311d53b5860cd3ee8bf46a173cc0589fda6

Add factory for User model
    touch spec/factories/users.rb
    https://github.com/alex-magana/eat-in/commit/d5eb5a98ba93e1a3c3ece0de25db80710b16bfca

bundle exec rspec

Define the User model
    https://github.com/alex-magana/eat-in/commit/7e1b35ce350d8baf2fbc73a82e4cfe8bd7de6709

Add gem bcrypt to Gemfile
    https://github.com/alex-magana/eat-in/commit/8777bb6b0af740d44b81430c685e50e888b52bac

bundle install

bundle exec rspec
    - User model specs pass at this point

Add `gem 'jwt'` to the Gemflie
    gem 'jwt'
    https://stackoverflow.com/questions/1592534/what-is-token-based-authentication
    https://github.com/alex-magana/eat-in/commit/331068b2f89e96694adea9ced26edd41260337f7
    https://github.com/alex-magana/eat-in/pull/8/files

bundle install

Add the lib directory & create the jwt class file
    mkdir app/lib
    touch app/lib/json_web_token.rb
    - As of rails 5 autoloading is disabled in production for thread safety
    - The JWT class should live in eat-in/lib since it's not domain specific
    - Since eat-in/lib is part of the autoload path, positioning the JWT class
    in eat-in/lib may raise an issue with autoloading disabled
    - The solution is to create 'lib' directory in eat-in/app
    - eat/app is autoload in development and eagerloaded in production

Define the JsonWebToken class
    https://github.com/alex-magana/eat-in/commit/a63dddae4476f0462ee1a04c9f591d4b84721379
    https://github.com/alex-magana/eat-in/pull/8/files

Add custom errors handlers JWT errors
    - Defining the custom errors as sub-classes of StandardError
    enables us to rescue_from the custom errors once the errors are raised
    https://github.com/alex-magana/eat-in/commit/3aeb17d9f7c8ccb54fff536e3f3e53c63a032e5f
    https://github.com/alex-magana/eat-in/pull/8/files

Create an authorization service class
    - This authorizes requests to assert a valid token and user payload is included.
    - app/auth directory houses the auth service
    mkdir app/auth
    touch app/auth/authorize_api_request.rb
    mkdir spec/auth
    touch spec/auth/authorize_api_request_spec.rb

Add specs for AuthorizeApiRequest
    - The auth service defines an entry method, call, that returns a valid user
    object and raises an error when invalid.
    https://github.com/alex-magana/eat-in/commit/5ec51934dc879023cca636ff43d3addc8f3eaa90

Create file for helpers, token_generator and expire_token_generator
    touch spec/support/controller_spec_helper.rb

Define helpers
    https://github.com/alex-magana/eat-in/commit/6de2cf08e2ab997730c3e3b6d660bf70d47620f8

Expose the helpers to specs via RSpec.configure
    https://github.com/alex-magana/eat-in/commit/4256458abd98040621bb3a205cd3cf704e9697d4
    https://github.com/alex-magana/eat-in/pull/9/files    

Expose RequestSpecHelper to specs of all types
    https://github.com/alex-magana/eat-in/commit/e3d974b02fe256fe75b4ebbc23120fba86bec140
    https://github.com/alex-magana/eat-in/pull/9/files

bundle exec rspec

Define AuthorizeApiRequest class
    https://github.com/alex-magana/eat-in/commit/845a80c89760367becdedf9228deacb46b2e8db4
    https://github.com/alex-magana/eat-in/pull/9/files

Define a message provider class
    touch app/lib/message.rb
    https://github.com/alex-magana/eat-in/commit/6bf4fa65b78c041eac00047031458f841de11b23
    https://github.com/alex-magana/eat-in/pull/9/files

bundle exec rspec spec/auth -fd

Create authentication class service
    touch app/auth/authenticate_user.rb
    touch spec/auth/authenticate_user_spec.rb

Add specs for AuthenticateUser
    https://github.com/alex-magana/eat-in/commit/4b7978ce926bece2ca15637733e7a92456974f3d
    https://github.com/alex-magana/eat-in/pull/10/files

bundle exec rspec

Define AuthenticateUser class
    -The AuthenticateUser service accepts a user email and password,
    checks if they are valid and then creates a token with
    the user id as the payload.
    https://github.com/alex-magana/eat-in/commit/04fb69d61b854f5f2aa96dc84baca5b7c6716ba3
    https://github.com/alex-magana/eat-in/pull/10/files

bundle exec rspec spec/auth -fd

Generate Authentication controller
    - This controller handles requests that validate user credentials.
    rails g controller Authentications

Add request specs for the Authentications controller
    touch spec/requests/authentications_spec.rb
    https://github.com/alex-magana/eat-in/commit/3065ac74a441b6ff16d0f922038f9bfe6fd93843
    https://github.com/alex-magana/eat-in/pull/11/files    

bundle exec rspec

Define the AuthenticationsController
    - This controller is slim in nature
    - This is made possible by handling the authentication business
    logic in the AuthenticateUser service.
    https://github.com/alex-magana/eat-in/commit/2bbaefcaf45309169b4859863cfe51447173357d
    https://github.com/alex-magana/eat-in/pull/11/files

Add the `/auth/login` route to the aplication
    https://github.com/alex-magana/eat-in/commit/3f63404d8f4cfcb403547de5f0b9cef138ae2285
    https://github.com/alex-magana/eat-in/pull/11/files

Create the Users controller
    rails g controller Users
    touch spec/requests/users_spec.rb

Define Users request specs
    [link goes here]

Add signup route
    [link goes here]

Add specs for the authorization callback
    - A callback in ApplicationsController that checks requests
    are from authenticated users prior to running the logic
    associated with the respective request.
    touch spec/controllers/application_controller_spec.rb
    [link goes here]

Define the authorization callback 
    - The application will verify the request by calling
    the request authorization service
    - The `current_user` is set is the request is authorized
    - `current_user` is used by other controllers
    [link goes here]

Exempt the authenticate action in AuthenticationController from authorization
    [link goes here]

Exempt the sign-up action in UsersController from authorization
    [link goes here]

bundle exec rspec

Add user test data to Restaurants request spec
    [link goes here]

Use `current_user` association to handle restaurants
    [link goes here]

Update Items request specs to use the `current_user` context
    [link goes here]

bundle exec rspec
